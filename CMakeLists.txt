cmake_minimum_required(VERSION 3.13)

set(EXECUTABLE_NAME iwd2-re)

project(${EXECUTABLE_NAME})

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED YES)
set(CMAKE_CXX_EXTENSIONS NO)

set(CMAKE_MFC_FLAG 2)

add_executable(${EXECUTABLE_NAME} WIN32)

target_sources(${EXECUTABLE_NAME} PUBLIC
    "src/BalDataTypes.h"
    "src/C2DArray.cpp"
    "src/C2DArray.h"
    "src/CAIAction.cpp"
    "src/CAIAction.h"
    "src/CAICondition.cpp"
    "src/CAICondition.h"
    "src/CAIIdList.cpp"
    "src/CAIIdList.h"
    "src/CAIObjectType.cpp"
    "src/CAIObjectType.h"
    "src/CAIResponse.cpp"
    "src/CAIResponse.h"
    "src/CAITrigger.cpp"
    "src/CAITrigger.h"
    "src/CAIUtil.cpp"
    "src/CAIUtil.h"
    "src/CAlias.cpp"
    "src/CAlias.h"
    "src/CAliasList.cpp"
    "src/CAliasList.h"
    "src/CBaldurChitin.cpp"
    "src/CBaldurChitin.h"
    "src/CBaldurEngine.cpp"
    "src/CBaldurEngine.h"
    "src/CBaldurMessage.cpp"
    "src/CBaldurMessage.h"
    "src/CBaldurProjector.cpp"
    "src/CBaldurProjector.h"
    "src/CCacheStatus.cpp"
    "src/CCacheStatus.h"
    "src/CChatBuffer.cpp"
    "src/CChatBuffer.h"
    "src/CChitin.cpp"
    "src/CChitin.h"
    "src/CCrypt.cpp"
    "src/CCrypt.h"
    "src/CDimm.cpp"
    "src/CDimm.h"
    "src/CDimmKeyTable.cpp"
    "src/CDimmKeyTable.h"
    "src/CDungeonMaster.cpp"
    "src/CDungeonMaster.h"
    "src/CGameAnimationType.cpp"
    "src/CGameAnimationType.h"
    "src/CGameArea.cpp"
    "src/CGameArea.h"
    "src/CGameOptions.cpp"
    "src/CGameOptions.h"
    "src/CGameSpy.cpp"
    "src/CGameSpy.h"
    "src/ChDataTypes.h"
    "src/CImm.cpp"
    "src/CImm.h"
    "src/CInfCursor.cpp"
    "src/CInfCursor.h"
    "src/CInfGame.cpp"
    "src/CInfGame.h"
    "src/CInfinity.cpp"
    "src/CInfinity.h"
    "src/CKeyInfo.cpp"
    "src/CKeyInfo.h"
    "src/CMessageHandler.cpp"
    "src/CMessageHandler.h"
    "src/CNetwork.cpp"
    "src/CNetwork.h"
    "src/CNetworkWindow.cpp"
    "src/CNetworkWindow.h"
    "src/CParticle.cpp"
    "src/CParticle.h"
    "src/CProgressBar.cpp"
    "src/CProgressBar.h"
    "src/CRes.cpp"
    "src/CRes.h"
    "src/CResArea.cpp"
    "src/CResArea.h"
    "src/CResBinary.cpp"
    "src/CResBinary.h"
    "src/CResBitmap.cpp"
    "src/CResBitmap.h"
    "src/CResCache.cpp"
    "src/CResCache.h"
    "src/CResCell.cpp"
    "src/CResCell.h"
    "src/CResCellHeader.cpp"
    "src/CResCellHeader.h"
    "src/CResCHR.cpp"
    "src/CResCHR.h"
    "src/CResCRE.cpp"
    "src/CResCRE.h"
    "src/CResDLG.cpp"
    "src/CResDLG.h"
    "src/CResEffect.cpp"
    "src/CResEffect.h"
    "src/CResFile.cpp"
    "src/CResFile.h"
    "src/CResGame.cpp"
    "src/CResGame.h"
    "src/CResItem.cpp"
    "src/CResItem.h"
    "src/CResMosaic.cpp"
    "src/CResMosaic.h"
    "src/CResPLT.cpp"
    "src/CResPLT.h"
    "src/CResRef.cpp"
    "src/CResRef.h"
    "src/CResSpell.cpp"
    "src/CResSpell.h"
    "src/CResStore.cpp"
    "src/CResStore.h"
    "src/CResText.cpp"
    "src/CResText.h"
    "src/CResTile.cpp"
    "src/CResTile.h"
    "src/CResUI.cpp"
    "src/CResUI.h"
    "src/CResWave.cpp"
    "src/CResWave.h"
    "src/CResWED.cpp"
    "src/CResWED.h"
    "src/CResWorldMap.cpp"
    "src/CResWorldMap.h"
    "src/CRuleTables.cpp"
    "src/CRuleTables.h"
    "src/CScreenChapter.cpp"
    "src/CScreenChapter.h"
    "src/CScreenCharacter.cpp"
    "src/CScreenCharacter.h"
    "src/CScreenConnection.cpp"
    "src/CScreenConnection.h"
    "src/CScreenCreateChar.cpp"
    "src/CScreenCreateChar.h"
    "src/CScreenInventory.cpp"
    "src/CScreenInventory.h"
    "src/CScreenJournal.cpp"
    "src/CScreenJournal.h"
    "src/CScreenKeymaps.cpp"
    "src/CScreenKeymaps.h"
    "src/CScreenLoad.cpp"
    "src/CScreenLoad.h"
    "src/CScreenMap.cpp"
    "src/CScreenMap.h"
    "src/CScreenMovies.cpp"
    "src/CScreenMovies.h"
    "src/CScreenMultiPlayer.cpp"
    "src/CScreenMultiPlayer.h"
    "src/CScreenOptions.cpp"
    "src/CScreenOptions.h"
    "src/CScreenSave.cpp"
    "src/CScreenSave.h"
    "src/CScreenSinglePlayer.cpp"
    "src/CScreenSinglePlayer.h"
    "src/CScreenSpellbook.cpp"
    "src/CScreenSpellbook.h"
    "src/CScreenStart.cpp"
    "src/CScreenStart.h"
    "src/CScreenStore.cpp"
    "src/CScreenStore.h"
    "src/CScreenWorld.cpp"
    "src/CScreenWorld.h"
    "src/CScreenWorldMap.cpp"
    "src/CScreenWorldMap.h"
    "src/CSearchBitmap.cpp"
    "src/CSearchBitmap.h"
    "src/CSound.cpp"
    "src/CSound.h"
    "src/CSoundChannel.cpp"
    "src/CSoundChannel.h"
    "src/CSoundMixer.cpp"
    "src/CSoundMixer.h"
    "src/CSoundProperties.cpp"
    "src/CSoundProperties.h"
    "src/CSpell.cpp"
    "src/CSpell.h"
    "src/CSwitchCDStatus.cpp"
    "src/CSwitchCDStatus.h"
    "src/CTimerWorld.cpp"
    "src/CTimerWorld.h"
    "src/CTlkFileOverride.cpp"
    "src/CTlkFileOverride.h"
    "src/CTlkTable.cpp"
    "src/CTlkTable.h"
    "src/CUIControlBase.cpp"
    "src/CUIControlBase.h"
    "src/CUIControlButton.cpp"
    "src/CUIControlButton.h"
    "src/CUIControlButton3State.cpp"
    "src/CUIControlButton3State.h"
    "src/CUIControlFactory.cpp"
    "src/CUIControlLabel.cpp"
    "src/CUIControlLabel.h"
    "src/CUIControlSlider.cpp"
    "src/CUIControlSlider.h"
    "src/CUIManager.cpp"
    "src/CUIManager.h"
    "src/CUIPanel.cpp"
    "src/CUIPanel.h"
    "src/CUnknown1.cpp"
    "src/CUnknown1.h"
    "src/CUnknown2.cpp"
    "src/CUnknown2.h"
    "src/CUtil.cpp"
    "src/CUtil.h"
    "src/CVidBitmap.cpp"
    "src/CVidBitmap.h"
    "src/CVidBlitter.cpp"
    "src/CVidBlitter.h"
    "src/CVidCell.cpp"
    "src/CVidCell.h"
    "src/CVideo.cpp"
    "src/CVideo.h"
    "src/CVidFont.cpp"
    "src/CVidFont.h"
    "src/CVidImage.cpp"
    "src/CVidImage.h"
    "src/CVidInf.cpp"
    "src/CVidInf.h"
    "src/CVidMode.cpp"
    "src/CVidMode.h"
    "src/CVidMosaic.cpp"
    "src/CVidMosaic.h"
    "src/CVidPalette.cpp"
    "src/CVidPalette.h"
    "src/CVoice.cpp"
    "src/CVoice.h"
    "src/CWarp.cpp"
    "src/CWarp.h"
    "src/CWeather.cpp"
    "src/CWeather.h"
    "src/main.cpp"
    "src/mfc.h"
    "src/resource.h"
    "src/resource.rc"
)

target_compile_definitions(${EXECUTABLE_NAME} PUBLIC
    _AFXDLL
    _CRT_NONSTDC_NO_WARNINGS
    _CRT_SECURE_NO_WARNINGS
    _MBCS
)

target_link_libraries(${EXECUTABLE_NAME}
    ddraw
    dsound
    dxguid
    version
    winmm
)

add_subdirectory("third_party/zlib")
target_link_libraries(${EXECUTABLE_NAME} ${ZLIB_LIBRARIES})
target_include_directories(${EXECUTABLE_NAME} PRIVATE ${ZLIB_INCLUDE_DIRS})
